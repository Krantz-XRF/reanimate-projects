-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Instances of numeric classes for functions and tuples
--   
--   Instances of numeric classes for functions and tuples. Import
--   <a>Data.NumInstances</a> to get all the instances. If you want only
--   function or only tuple instances, import
--   <a>Data.NumInstances.Function</a> or <a>Data.NumInstances.Tuple</a>.
@package NumInstances
@version 1.4


-- | Number class instances for functions
module Data.NumInstances.Function
instance GHC.Num.Num b => GHC.Num.Num (a -> b)
instance GHC.Real.Fractional b => GHC.Real.Fractional (a -> b)
instance GHC.Float.Floating b => GHC.Float.Floating (a -> b)


-- | Number class instances for tuples
module Data.NumInstances.Tuple
instance (GHC.Num.Num a, GHC.Num.Num b) => GHC.Num.Num (a, b)
instance (GHC.Real.Fractional a, GHC.Real.Fractional b) => GHC.Real.Fractional (a, b)
instance (GHC.Float.Floating a, GHC.Float.Floating b) => GHC.Float.Floating (a, b)
instance (GHC.Num.Num a, GHC.Num.Num b, GHC.Num.Num c) => GHC.Num.Num (a, b, c)
instance (GHC.Real.Fractional a, GHC.Real.Fractional b, GHC.Real.Fractional c) => GHC.Real.Fractional (a, b, c)
instance (GHC.Float.Floating a, GHC.Float.Floating b, GHC.Float.Floating c) => GHC.Float.Floating (a, b, c)
instance (GHC.Num.Num a, GHC.Num.Num b, GHC.Num.Num c, GHC.Num.Num d) => GHC.Num.Num (a, b, c, d)
instance (GHC.Real.Fractional a, GHC.Real.Fractional b, GHC.Real.Fractional c, GHC.Real.Fractional d) => GHC.Real.Fractional (a, b, c, d)
instance (GHC.Float.Floating a, GHC.Float.Floating b, GHC.Float.Floating c, GHC.Float.Floating d) => GHC.Float.Floating (a, b, c, d)
instance (GHC.Num.Num a, GHC.Num.Num b, GHC.Num.Num c, GHC.Num.Num d, GHC.Num.Num e) => GHC.Num.Num (a, b, c, d, e)
instance (GHC.Real.Fractional a, GHC.Real.Fractional b, GHC.Real.Fractional c, GHC.Real.Fractional d, GHC.Real.Fractional e) => GHC.Real.Fractional (a, b, c, d, e)
instance (GHC.Float.Floating a, GHC.Float.Floating b, GHC.Float.Floating c, GHC.Float.Floating d, GHC.Float.Floating e) => GHC.Float.Floating (a, b, c, d, e)
instance (GHC.Num.Num a, GHC.Num.Num b, GHC.Num.Num c, GHC.Num.Num d, GHC.Num.Num e, GHC.Num.Num f) => GHC.Num.Num (a, b, c, d, e, f)
instance (GHC.Real.Fractional a, GHC.Real.Fractional b, GHC.Real.Fractional c, GHC.Real.Fractional d, GHC.Real.Fractional e, GHC.Real.Fractional f) => GHC.Real.Fractional (a, b, c, d, e, f)
instance (GHC.Float.Floating a, GHC.Float.Floating b, GHC.Float.Floating c, GHC.Float.Floating d, GHC.Float.Floating e, GHC.Float.Floating f) => GHC.Float.Floating (a, b, c, d, e, f)
instance (GHC.Num.Num a, GHC.Num.Num b, GHC.Num.Num c, GHC.Num.Num d, GHC.Num.Num e, GHC.Num.Num f, GHC.Num.Num g) => GHC.Num.Num (a, b, c, d, e, f, g)
instance (GHC.Real.Fractional a, GHC.Real.Fractional b, GHC.Real.Fractional c, GHC.Real.Fractional d, GHC.Real.Fractional e, GHC.Real.Fractional f, GHC.Real.Fractional g) => GHC.Real.Fractional (a, b, c, d, e, f, g)
instance (GHC.Float.Floating a, GHC.Float.Floating b, GHC.Float.Floating c, GHC.Float.Floating d, GHC.Float.Floating e, GHC.Float.Floating f, GHC.Float.Floating g) => GHC.Float.Floating (a, b, c, d, e, f, g)


-- | Number class instances for functions and tuples
module Data.NumInstances
