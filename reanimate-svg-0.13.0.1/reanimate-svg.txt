-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | SVG file loader and serializer
--   
--   reanimate-svg provides types representing a SVG document, and allows
--   to load and save it.
--   
--   The types definition are aimed at rendering, so they are rather
--   comple. For simpler SVG document building, look after `lucid-svg`.
@package reanimate-svg
@version 0.13.0.1


-- | Defines the types used to describes CSS elements
module Graphics.SvgTree.CssTypes

-- | Defines complex selector.
data CssSelector

-- | Corresponds to the <a>+</a> CSS selector.
Nearby :: CssSelector

-- | Corresponds to the <a>&gt;</a> CSS selectro.
DirectChildren :: CssSelector

-- | Grouping construct, all the elements of the list must be matched.
AllOf :: [CssDescriptor] -> CssSelector

-- | A CssSelectorRule is a list of all the elements that must be met in a
--   depth first search fashion.
type CssSelectorRule = [CssSelector]

-- | Represents a CSS selector and the different declarations to apply to
--   the matched elemens.
data CssRule
CssRule :: ![CssSelectorRule] -> ![CssDeclaration] -> CssRule

-- | At the first level represents a list of elements to be matched. If any
--   match is made, you can apply the declarations. At the second level
[cssRuleSelector] :: CssRule -> ![CssSelectorRule]

-- | Declarations to apply to the matched element.
[cssDeclarations] :: CssRule -> ![CssDeclaration]

-- | Describes an element of a CSS selector. Multiple elements can be
--   combined in a CssSelector type.
data CssDescriptor

-- | .IDENT
OfClass :: Text -> CssDescriptor

-- | IDENT
OfName :: Text -> CssDescriptor

-- | #IDENT
OfId :: Text -> CssDescriptor

-- | `:IDENT` (ignore function syntax)
OfPseudoClass :: Text -> CssDescriptor

-- | <a>*</a>
AnyElem :: CssDescriptor

-- | ``
WithAttrib :: Text -> Text -> CssDescriptor

-- | Represents the content to apply to some CSS matched rules.
data CssDeclaration
CssDeclaration :: Text -> [[CssElement]] -> CssDeclaration

-- | Property name to change (like font-family or color).
[_cssDeclarationProperty] :: CssDeclaration -> Text

-- | List of values
[_cssDecarationlValues] :: CssDeclaration -> [[CssElement]]

-- | Value of a CSS property.
data CssElement
CssIdent :: !Text -> CssElement
CssString :: !Text -> CssElement
CssReference :: !Text -> CssElement
CssNumber :: !Number -> CssElement
CssColor :: !PixelRGBA8 -> CssElement
CssFunction :: !Text -> ![CssElement] -> CssElement
CssOpComa :: CssElement
CssOpSlash :: CssElement

-- | Interface for elements to be matched against some CssRule.
class CssMatcheable a

-- | For an element, tell its optional ID attribute.
cssIdOf :: CssMatcheable a => a -> Maybe Text

-- | For an element, return all of it's class attributes.
cssClassOf :: CssMatcheable a => a -> [Text]

-- | Return the name of the tagname of the element
cssNameOf :: CssMatcheable a => a -> Text

-- | Return a value of a given attribute if present
cssAttribOf :: CssMatcheable a => a -> Text -> Maybe Text

-- | Represents a zipper in depth at the first list level, and the previous
--   nodes at in the second list level.
type CssContext a = [[a]]

-- | Alias describing a "dot per inch" information used for size
--   calculation (see toUserUnit).
type Dpi = Int

-- | Encode complex number possibly depending on the current render size.
data Number

-- | Simple coordinate in current user coordinate.
Num :: Double -> Number

-- | With suffix "px"
Px :: Double -> Number

-- | Number relative to the current font size.
Em :: Double -> Number

-- | Number relative to the current viewport size.
Percent :: Double -> Number
Pc :: Double -> Number

-- | Number in millimeters, relative to DPI.
Mm :: Double -> Number

-- | Number in centimeters, relative to DPI.
Cm :: Double -> Number

-- | Number in points, relative to DPI.
Point :: Double -> Number

-- | Number in inches, relative to DPI.
Inches :: Double -> Number

-- | Encode the number to string which can be used in a CSS or a svg
--   attributes.
serializeNumber :: Number -> String

-- | Given CSS rules, find all the declarations to apply to the element in
--   a given context.
findMatchingDeclarations :: CssMatcheable a => [CssRule] -> CssContext a -> [CssDeclaration]

-- | This function replaces all device dependant units with user units
--   given its DPI configuration. Preserves percentage and "em" notation.
toUserUnit :: Dpi -> Number -> Number

-- | Helper function to modify inner value of a number
mapNumber :: (Double -> Double) -> Number -> Number

-- | Serialize an element to a text builder.
tserialize :: TextBuildable a => a -> Builder
instance GHC.Show.Show Graphics.SvgTree.CssTypes.CssDescriptor
instance GHC.Classes.Eq Graphics.SvgTree.CssTypes.CssDescriptor
instance GHC.Show.Show Graphics.SvgTree.CssTypes.CssSelector
instance GHC.Classes.Eq Graphics.SvgTree.CssTypes.CssSelector
instance Data.Hashable.Class.Hashable Graphics.SvgTree.CssTypes.Number
instance GHC.Generics.Generic Graphics.SvgTree.CssTypes.Number
instance GHC.Show.Show Graphics.SvgTree.CssTypes.Number
instance GHC.Classes.Eq Graphics.SvgTree.CssTypes.Number
instance GHC.Show.Show Graphics.SvgTree.CssTypes.CssElement
instance GHC.Classes.Eq Graphics.SvgTree.CssTypes.CssElement
instance GHC.Show.Show Graphics.SvgTree.CssTypes.CssDeclaration
instance GHC.Classes.Eq Graphics.SvgTree.CssTypes.CssDeclaration
instance GHC.Show.Show Graphics.SvgTree.CssTypes.CssRule
instance GHC.Classes.Eq Graphics.SvgTree.CssTypes.CssRule
instance Graphics.SvgTree.CssTypes.TextBuildable Graphics.SvgTree.CssTypes.CssRule
instance Graphics.SvgTree.CssTypes.TextBuildable Graphics.SvgTree.CssTypes.CssDeclaration
instance Graphics.SvgTree.CssTypes.TextBuildable Graphics.SvgTree.CssTypes.CssElement
instance Graphics.SvgTree.CssTypes.TextBuildable Graphics.SvgTree.CssTypes.Number
instance Graphics.SvgTree.CssTypes.TextBuildable Graphics.SvgTree.CssTypes.CssSelector
instance Graphics.SvgTree.CssTypes.TextBuildable Graphics.SvgTree.CssTypes.CssDescriptor

module Graphics.SvgTree.NamedColors
svgNamedColors :: Map Text PixelRGBA8


-- | This module define all the types used in the definition of a svg
--   scene.
--   
--   Most of the types are lensified.
module Graphics.SvgTree.Types

-- | Basic coordinate type.
type Coord = Double

-- | Tell if a path command is absolute (in the current user coordiante) or
--   relative to the previous point.
data Origin

-- | Next point in absolute coordinate
OriginAbsolute :: Origin

-- | Next point relative to the previous
OriginRelative :: Origin

-- | Possibly context dependant point.
type Point = (Number, Number)

-- | Real Point, fully determined and independent of the rendering context.
type RPoint = V2 Coord

-- | Path command definition.
data PathCommand

-- | <tt>M</tt> or <tt>m</tt> command
MoveTo :: !Origin -> ![RPoint] -> PathCommand

-- | Line to, <tt>L</tt> or <tt>l</tt> Svg path command.
LineTo :: !Origin -> ![RPoint] -> PathCommand

-- | Equivalent to the <tt>H</tt> or <tt>h</tt> svg path command.
HorizontalTo :: !Origin -> ![Coord] -> PathCommand

-- | Equivalent to the <tt>V</tt> or <tt>v</tt> svg path command.
VerticalTo :: !Origin -> ![Coord] -> PathCommand

-- | Cubic bezier, <tt>C</tt> or <tt>c</tt> command
CurveTo :: !Origin -> ![(RPoint, RPoint, RPoint)] -> PathCommand

-- | Smooth cubic bezier, equivalent to <tt>S</tt> or <tt>s</tt> command
SmoothCurveTo :: !Origin -> ![(RPoint, RPoint)] -> PathCommand

-- | Quadratic bezier, <tt>Q</tt> or <tt>q</tt> command
QuadraticBezier :: !Origin -> ![(RPoint, RPoint)] -> PathCommand

-- | Quadratic bezier, <tt>T</tt> or <tt>t</tt> command
SmoothQuadraticBezierCurveTo :: !Origin -> ![RPoint] -> PathCommand

-- | Elliptical arc, <tt>A</tt> or <tt>a</tt> command.
EllipticalArc :: !Origin -> ![(Coord, Coord, Coord, Bool, Bool, RPoint)] -> PathCommand

-- | Close the path, <tt>Z</tt> or <tt>z</tt> svg path command.
EndPath :: PathCommand

-- | Describe the content of the <tt>transformation</tt> attribute. see
--   <a>_transform</a> and <a>transform</a>.
data Transformation

-- | Directly encode the translation matrix.
TransformMatrix :: !Coord -> !Coord -> !Coord -> !Coord -> !Coord -> !Coord -> Transformation

-- | Translation along a vector
Translate :: !Double -> !Double -> Transformation

-- | Scaling on both axes or on X axis and Y axis.
Scale :: !Double -> !Maybe Double -> Transformation

-- | Rotation around `(0, 0)` or around an optional point.
Rotate :: !Double -> !Maybe (Double, Double) -> Transformation

-- | Skew transformation along the X axis.
SkewX :: !Double -> Transformation

-- | Skew transformation along the Y axis.
SkewY :: !Double -> Transformation

-- | Unknown transformation, like identity.
TransformUnknown :: Transformation

-- | Corresponds to the possible values of the attributes which are either
--   <tt>none</tt> or `url(#elem)`
data ElementRef

-- | Value for <tt>none</tt>
RefNone :: ElementRef

-- | Equivalent to `url()` attribute.
Ref :: String -> ElementRef

-- | Defines the possible values of various *units attributes used in the
--   definition of the gradients and masks.
data CoordinateUnits

-- | <tt>userSpaceOnUse</tt> value
CoordUserSpace :: CoordinateUnits

-- | <tt>objectBoundingBox</tt> value
CoordBoundingBox :: CoordinateUnits

-- | Encode the number to string which can be used in a CSS or a svg
--   attributes.
serializeNumber :: Number -> String

-- | Convert the Transformation to a string which can be directly used in a
--   svg attributes.
serializeTransformation :: Transformation -> String

-- | Transform a list of transformations to a string for svg
--   <a>transform</a> attributes.
serializeTransformations :: [Transformation] -> String

-- | Describes how the line should be terminated when stroked. Describes
--   the values of the `stroke-linecap` attribute. See
--   <tt>_strokeLineCap</tt>
data Cap

-- | End with a round (<a>round</a> value)
CapRound :: Cap

-- | Define straight just at the end (<tt>butt</tt> value)
CapButt :: Cap

-- | Straight further of the ends (<tt>square</tt> value)
CapSquare :: Cap

-- | Defines the possible values of the `stroke-linejoin` attribute. see
--   <tt>_strokeLineJoin</tt>
data LineJoin

-- | <tt>miter</tt> value
JoinMiter :: LineJoin

-- | <tt>bevel</tt> value
JoinBevel :: LineJoin

-- | <a>round</a> value
JoinRound :: LineJoin

-- | Main type for the scene description, reorient to specific type
--   describing each tag.
data Tree
pattern Tree :: TreeBranch -> Tree
pattern None :: Tree
treeBranch :: Lens' Tree TreeBranch
data TreeBranch
NoNode :: TreeBranch
UseNode :: !Use -> !Maybe Tree -> TreeBranch
[useInformation] :: TreeBranch -> !Use
[useSubTree] :: TreeBranch -> !Maybe Tree
GroupNode :: !Group -> TreeBranch
SymbolNode :: !Group -> TreeBranch
DefinitionNode :: !Group -> TreeBranch
FilterNode :: !Filter -> TreeBranch
PathNode :: !Path -> TreeBranch
CircleNode :: !Circle -> TreeBranch
PolyLineNode :: !PolyLine -> TreeBranch
PolygonNode :: !Polygon -> TreeBranch
EllipseNode :: !Ellipse -> TreeBranch
LineNode :: !Line -> TreeBranch
RectangleNode :: !Rectangle -> TreeBranch
TextNode :: !Maybe TextPath -> !Text -> TreeBranch
ImageNode :: !Image -> TreeBranch
LinearGradientNode :: !LinearGradient -> TreeBranch
RadialGradientNode :: !RadialGradient -> TreeBranch
MeshGradientNode :: !MeshGradient -> TreeBranch
PatternNode :: !Pattern -> TreeBranch
MarkerNode :: !Marker -> TreeBranch
MaskNode :: !Mask -> TreeBranch
ClipPathNode :: !ClipPath -> TreeBranch
SvgNode :: !Document -> TreeBranch

-- | Encode complex number possibly depending on the current render size.
data Number

-- | Simple coordinate in current user coordinate.
Num :: Double -> Number

-- | With suffix "px"
Px :: Double -> Number

-- | Number relative to the current font size.
Em :: Double -> Number

-- | Number relative to the current viewport size.
Percent :: Double -> Number
Pc :: Double -> Number

-- | Number in millimeters, relative to DPI.
Mm :: Double -> Number

-- | Number in centimeters, relative to DPI.
Cm :: Double -> Number

-- | Number in points, relative to DPI.
Point :: Double -> Number

-- | Number in inches, relative to DPI.
Inches :: Double -> Number

-- | Defines the possible values for the <tt>spreadMethod</tt> values used
--   for the gradient definitions.
data Spread

-- | <tt>reapeat</tt> value
SpreadRepeat :: Spread

-- | <tt>pad</tt> value
SpreadPad :: Spread

-- | `reflect value`
SpreadReflect :: Spread

-- | Describes the different values which can be used in the <tt>fill</tt>
--   or <tt>stroke</tt> attributes.
data Texture

-- | Direct solid color (#rrggbb, #rgb)
ColorRef :: PixelRGBA8 -> Texture

-- | Link to a complex texture (url(#name))
TextureRef :: String -> Texture

-- | Equivalent to the <tt>none</tt> value.
FillNone :: Texture

-- | Sum types helping keeping track of all the namable elemens in a SVG
--   document.
data Element
ElementLinearGradient :: LinearGradient -> Element
ElementRadialGradient :: RadialGradient -> Element
ElementMeshGradient :: MeshGradient -> Element
ElementGeometry :: Tree -> Element
ElementPattern :: Pattern -> Element
ElementMarker :: Marker -> Element
ElementMask :: Mask -> Element
ElementClipPath :: ClipPath -> Element

-- | Describe the possible filling algorithms. Map the values of the
--   `fill-rule` attributes.
data FillRule

-- | Corresponds to the <tt>evenodd</tt> value.
FillEvenOdd :: FillRule

-- | Corresponds to the <tt>nonzero</tt> value.
FillNonZero :: FillRule

-- | Classify the font style, used to search a matching font in the
--   FontCache.
data FontStyle
FontStyleNormal :: FontStyle
FontStyleItalic :: FontStyle
FontStyleOblique :: FontStyle

-- | Alias describing a "dot per inch" information used for size
--   calculation (see toUserUnit).
type Dpi = Int

-- | Define an empty 'default' element for the SVG tree. It is used as base
--   when parsing the element from XML.
class WithDefaultSvg a

-- | The default element.
defaultSvg :: WithDefaultSvg a => a

-- | Represents a full svg document with style, geometry and named
--   elements.
data Document
Document :: Maybe (Double, Double, Double, Double) -> Maybe Number -> Maybe Number -> [Tree] -> String -> FilePath -> PreserveAspectRatio -> Document
[_documentViewBox] :: Document -> Maybe (Double, Double, Double, Double)
[_documentWidth] :: Document -> Maybe Number
[_documentHeight] :: Document -> Maybe Number
[_documentElements] :: Document -> [Tree]
[_documentDescription] :: Document -> String
[_documentLocation] :: Document -> FilePath
[_documentAspectRatio] :: Document -> PreserveAspectRatio
pattern SvgTree :: Document -> Tree
svgTree :: Document -> Tree
documentViewBox :: Lens' Document (Maybe (Double, Double, Double, Double))
documentWidth :: Lens' Document (Maybe Number)
documentHeight :: Lens' Document (Maybe Number)
documentElements :: Lens' Document [Tree]
documentDescription :: Lens' Document String
documentLocation :: Lens' Document FilePath
documentAspectRatio :: Lens' Document PreserveAspectRatio

-- | Calculate the document size in function of the different available
--   attributes in the document.
documentSize :: Dpi -> Document -> (Int, Int)

-- | This type defines how to draw any primitives, which color to use, how
--   to stroke the primitives and the potential transformations to use.
--   
--   All these attributes are propagated to the children.
data DrawAttributes
DrawAttributes :: !Maybe Number -> !Maybe Texture -> !Maybe Float -> !Maybe Cap -> !Maybe LineJoin -> !Maybe Double -> !Maybe Texture -> !Maybe Float -> !Maybe Float -> !Maybe [Transformation] -> !Maybe FillRule -> !Maybe ElementRef -> !Maybe ElementRef -> !Maybe FillRule -> ![Text] -> !Maybe String -> !Maybe Number -> !Maybe [Number] -> !Maybe Number -> !Maybe [String] -> !Maybe FontStyle -> !Maybe TextAnchor -> !Maybe ElementRef -> !Maybe ElementRef -> !Maybe ElementRef -> !Maybe ElementRef -> DrawAttributes

-- | Corresponds to the `stroke-width` SVG attribute.
[_strokeWidth] :: DrawAttributes -> !Maybe Number

-- | Corresponds to the <tt>stroke</tt> attribute.
[_strokeColor] :: DrawAttributes -> !Maybe Texture

-- | Define the `stroke-opacity` attribute, the transparency for the
--   "border".
[_strokeOpacity] :: DrawAttributes -> !Maybe Float

-- | Corresponds to the `stroke-linecap` SVG attribute.
[_strokeLineCap] :: DrawAttributes -> !Maybe Cap

-- | Corresponds to the `stroke-linejoin` attribute.
[_strokeLineJoin] :: DrawAttributes -> !Maybe LineJoin

-- | Defines the distance of the miter join, corresponds to the
--   `stroke-miterlimit` attritbue.
[_strokeMiterLimit] :: DrawAttributes -> !Maybe Double

-- | Define the fill color of the elements. Corresponds to the
--   <tt>fill</tt> attribute.
[_fillColor] :: DrawAttributes -> !Maybe Texture

-- | Define the `fill-opacity` attribute, the transparency for the
--   "content".
[_fillOpacity] :: DrawAttributes -> !Maybe Float

-- | Defines the global or group opacity attribute.
[_groupOpacity] :: DrawAttributes -> !Maybe Float

-- | Content of the <a>transform</a> attribute
[_transform] :: DrawAttributes -> !Maybe [Transformation]

-- | Defines the `fill-rule` used during the rendering.
[_fillRule] :: DrawAttributes -> !Maybe FillRule

-- | Defines the <tt>mask</tt> attribute.
[_maskRef] :: DrawAttributes -> !Maybe ElementRef

-- | Defines the `clip-path` attribute.
[_clipPathRef] :: DrawAttributes -> !Maybe ElementRef

-- | Defines the `clip-rule` attribute.
[_clipRule] :: DrawAttributes -> !Maybe FillRule

-- | Map to the `class` attribute. Used for the CSS rewriting.
[_attrClass] :: DrawAttributes -> ![Text]

-- | Map to the <a>id</a> attribute. Used for the CSS rewriting.
[_attrId] :: DrawAttributes -> !Maybe String

-- | Defines the start distance of the dashing pattern. Corresponds to the
--   `stroke-dashoffset` attribute.
[_strokeOffset] :: DrawAttributes -> !Maybe Number

-- | Defines the dashing pattern for the lines. Corresponds to the
--   `stroke-dasharray` attribute.
[_strokeDashArray] :: DrawAttributes -> !Maybe [Number]

-- | Current size of the text, corresponds to the `font-size` SVG
--   attribute.
[_fontSize] :: DrawAttributes -> !Maybe Number

-- | Defines the possible fonts to be used for text rendering. Maps to the
--   `font-family` attribute.
[_fontFamily] :: DrawAttributes -> !Maybe [String]

-- | Maps to the `font-style` attribute.
[_fontStyle] :: DrawAttributes -> !Maybe FontStyle

-- | Defines how to interpret the text position, corresponds to the
--   `text-anchor` attribute.
[_textAnchor] :: DrawAttributes -> !Maybe TextAnchor

-- | Defines the marker used for the start of the line. Corresponds to the
--   `marker-start` attribute.
[_markerStart] :: DrawAttributes -> !Maybe ElementRef

-- | Defines the marker used for every point of the polyline/path.
--   Corresponds to the `marker-mid` attribute.
[_markerMid] :: DrawAttributes -> !Maybe ElementRef

-- | Defines the marker used for the end of the line. Corresponds to the
--   `marker-end` attribute.
[_markerEnd] :: DrawAttributes -> !Maybe ElementRef
[_filterRef] :: DrawAttributes -> !Maybe ElementRef
class HasDrawAttributes c_arfk
drawAttributes :: HasDrawAttributes c_arfk => Lens' c_arfk DrawAttributes
attrClass :: HasDrawAttributes c_arfk => Lens' c_arfk [Text]
attrId :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe String)
clipPathRef :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe ElementRef)
clipRule :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe FillRule)
fillColor :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe Texture)
fillOpacity :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe Float)
fillRule :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe FillRule)
filterRef :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe ElementRef)
fontFamily :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe [String])
fontSize :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe Number)
fontStyle :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe FontStyle)
groupOpacity :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe Float)
markerEnd :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe ElementRef)
markerMid :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe ElementRef)
markerStart :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe ElementRef)
maskRef :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe ElementRef)
strokeColor :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe Texture)
strokeDashArray :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe [Number])
strokeLineCap :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe Cap)
strokeLineJoin :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe LineJoin)
strokeMiterLimit :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe Double)
strokeOffset :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe Number)
strokeOpacity :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe Float)
strokeWidth :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe Number)
textAnchor :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe TextAnchor)
transform :: HasDrawAttributes c_arfk => Lens' c_arfk (Maybe [Transformation])
data FilterElement
FEBlend :: Blend -> FilterElement
FEColorMatrix :: ColorMatrix -> FilterElement
FEComponentTransfer :: ComponentTransfer -> FilterElement
FEComposite :: Composite -> FilterElement
FEConvolveMatrix :: ConvolveMatrix -> FilterElement
FEDiffuseLighting :: DiffuseLighting -> FilterElement
FEDisplacementMap :: DisplacementMap -> FilterElement
FEDropShadow :: DropShadow -> FilterElement
FEFlood :: Flood -> FilterElement
FEFuncA :: FuncA -> FilterElement
FEFuncB :: FuncB -> FilterElement
FEFuncG :: FuncG -> FilterElement
FEFuncR :: FuncR -> FilterElement
FEGaussianBlur :: GaussianBlur -> FilterElement
FEImage :: ImageF -> FilterElement
FEMerge :: Merge -> FilterElement
FEMergeNode :: MergeNode -> FilterElement
FEMorphology :: Morphology -> FilterElement
FEOffset :: Offset -> FilterElement
FESpecularLighting :: SpecularLighting -> FilterElement
FETile :: Tile -> FilterElement
FETurbulence :: Turbulence -> FilterElement
FENone :: FilterElement
data FilterAttributes
FilterAttributes :: !Maybe Number -> !Maybe String -> !Maybe Number -> !Maybe Number -> !Maybe Number -> FilterAttributes
[_filterHeight] :: FilterAttributes -> !Maybe Number
[_filterResult] :: FilterAttributes -> !Maybe String
[_filterWidth] :: FilterAttributes -> !Maybe Number
[_filterX] :: FilterAttributes -> !Maybe Number
[_filterY] :: FilterAttributes -> !Maybe Number
class HasFilterAttributes c_aBTZ
filterAttributes :: HasFilterAttributes c_aBTZ => Lens' c_aBTZ FilterAttributes
filterHeight :: HasFilterAttributes c_aBTZ => Lens' c_aBTZ (Maybe Number)
filterResult :: HasFilterAttributes c_aBTZ => Lens' c_aBTZ (Maybe String)
filterWidth :: HasFilterAttributes c_aBTZ => Lens' c_aBTZ (Maybe Number)
filterX :: HasFilterAttributes c_aBTZ => Lens' c_aBTZ (Maybe Number)
filterY :: HasFilterAttributes c_aBTZ => Lens' c_aBTZ (Maybe Number)
data FilterSource
SourceGraphic :: FilterSource
SourceAlpha :: FilterSource
BackgroundImage :: FilterSource
BackgroundAlpha :: FilterSource
FillPaint :: FilterSource
StrokePaint :: FilterSource
SourceRef :: String -> FilterSource
data Blend
Blend :: !DrawAttributes -> !FilterAttributes -> !Maybe FilterSource -> !Maybe FilterSource -> !BlendMode -> Blend
[_blendDrawAttributes] :: Blend -> !DrawAttributes
[_blendFilterAttr] :: Blend -> !FilterAttributes
[_blendIn] :: Blend -> !Maybe FilterSource
[_blendIn2] :: Blend -> !Maybe FilterSource
[_blendMode] :: Blend -> !BlendMode
data BlendMode
Normal :: BlendMode
Multiply :: BlendMode
Screen :: BlendMode
Overlay :: BlendMode
Darken :: BlendMode
Lighten :: BlendMode
ColorDodge :: BlendMode
ColorBurn :: BlendMode
HardLight :: BlendMode
SoftLight :: BlendMode
Difference :: BlendMode
Exclusion :: BlendMode
Hue :: BlendMode
Saturation :: BlendMode
Color :: BlendMode
Luminosity :: BlendMode
blendDrawAttributes :: Lens' Blend DrawAttributes
blendFilterAttr :: Lens' Blend FilterAttributes
blendIn :: Lens' Blend (Maybe FilterSource)
blendIn2 :: Lens' Blend (Maybe FilterSource)
blendMode :: Lens' Blend BlendMode
data ConvolveMatrix
ConvolveMatrix :: DrawAttributes -> !FilterAttributes -> !Maybe FilterSource -> NumberOptionalNumber -> [Double] -> Double -> Double -> Int -> Int -> EdgeMode -> NumberOptionalNumber -> Bool -> ConvolveMatrix
[_convolveMatrixDrawAttributes] :: ConvolveMatrix -> DrawAttributes
[_convolveMatrixFilterAttr] :: ConvolveMatrix -> !FilterAttributes
[_convolveMatrixIn] :: ConvolveMatrix -> !Maybe FilterSource
[_convolveMatrixOrder] :: ConvolveMatrix -> NumberOptionalNumber
[_convolveMatrixKernelMatrix] :: ConvolveMatrix -> [Double]
[_convolveMatrixDivisor] :: ConvolveMatrix -> Double
[_convolveMatrixBias] :: ConvolveMatrix -> Double
[_convolveMatrixTargetX] :: ConvolveMatrix -> Int
[_convolveMatrixTargetY] :: ConvolveMatrix -> Int
[_convolveMatrixEdgeMode] :: ConvolveMatrix -> EdgeMode
[_convolveMatrixKernelUnitLength] :: ConvolveMatrix -> NumberOptionalNumber
[_convolveMatrixPreserveAlpha] :: ConvolveMatrix -> Bool
convolveMatrixDrawAttributes :: Lens' ConvolveMatrix DrawAttributes
convolveMatrixFilterAttr :: Lens' ConvolveMatrix FilterAttributes
convolveMatrixIn :: Lens' ConvolveMatrix (Maybe FilterSource)
convolveMatrixOrder :: Lens' ConvolveMatrix NumberOptionalNumber
convolveMatrixKernelMatrix :: Lens' ConvolveMatrix [Double]
convolveMatrixDivisor :: Lens' ConvolveMatrix Double
convolveMatrixBias :: Lens' ConvolveMatrix Double
convolveMatrixTargetX :: Lens' ConvolveMatrix Int
convolveMatrixTargetY :: Lens' ConvolveMatrix Int
convolveMatrixEdgeMode :: Lens' ConvolveMatrix EdgeMode
convolveMatrixKernelUnitLength :: Lens' ConvolveMatrix NumberOptionalNumber
convolveMatrixPreserveAlpha :: Lens' ConvolveMatrix Bool
data Morphology
Morphology :: DrawAttributes -> !FilterAttributes -> !Maybe FilterSource -> OperatorType -> NumberOptionalNumber -> Morphology
[_morphologyDrawAttributes] :: Morphology -> DrawAttributes
[_morphologyFilterAttr] :: Morphology -> !FilterAttributes
[_morphologyIn] :: Morphology -> !Maybe FilterSource
[_morphologyOperator] :: Morphology -> OperatorType
[_morphologyRadius] :: Morphology -> NumberOptionalNumber
data OperatorType
OperatorOver :: OperatorType
OperatorIn :: OperatorType
OperatorOut :: OperatorType
OperatorAtop :: OperatorType
OperatorXor :: OperatorType
OperatorLighter :: OperatorType
OperatorArithmetic :: OperatorType
data NumberOptionalNumber
Num1 :: Double -> NumberOptionalNumber
Num2 :: Double -> Double -> NumberOptionalNumber
morphologyDrawAttributes :: Lens' Morphology DrawAttributes
morphologyFilterAttr :: Lens' Morphology FilterAttributes
morphologyIn :: Lens' Morphology (Maybe FilterSource)
morphologyOperator :: Lens' Morphology OperatorType
morphologyRadius :: Lens' Morphology NumberOptionalNumber
data SpecularLighting
SpecularLighting :: DrawAttributes -> !FilterAttributes -> !Maybe FilterSource -> Double -> Double -> Double -> NumberOptionalNumber -> SpecularLighting
[_specLightingDrawAttributes] :: SpecularLighting -> DrawAttributes
[_specLightingFilterAttr] :: SpecularLighting -> !FilterAttributes
[_specLightingIn] :: SpecularLighting -> !Maybe FilterSource
[_specLightingSurfaceScale] :: SpecularLighting -> Double
[_specLightingSpecularConst] :: SpecularLighting -> Double
[_specLightingSpecularExp] :: SpecularLighting -> Double
[_specLightingKernelUnitLength] :: SpecularLighting -> NumberOptionalNumber
specLightingDrawAttributes :: Lens' SpecularLighting DrawAttributes
specLightingFilterAttr :: Lens' SpecularLighting FilterAttributes
specLightingIn :: Lens' SpecularLighting (Maybe FilterSource)
specLightingSurfaceScale :: Lens' SpecularLighting Double
specLightingSpecularConst :: Lens' SpecularLighting Double
specLightingSpecularExp :: Lens' SpecularLighting Double
specLightingKernelUnitLength :: Lens' SpecularLighting NumberOptionalNumber
data DiffuseLighting
diffuseLightingDrawAttributes :: Lens' DiffuseLighting DrawAttributes
diffuseLightingFilterAttr :: Lens' DiffuseLighting FilterAttributes
diffuseLightingIn :: Lens' DiffuseLighting (Maybe FilterSource)
diffuseLightingSurfaceScale :: Lens' DiffuseLighting Double
diffuseLightingDiffuseConst :: Lens' DiffuseLighting Double
diffuseLightingKernelUnitLength :: Lens' DiffuseLighting NumberOptionalNumber
data DropShadow
DropShadow :: DrawAttributes -> !FilterAttributes -> Double -> Double -> NumberOptionalNumber -> DropShadow
[_dropShadowDrawAttributes] :: DropShadow -> DrawAttributes
[_dropShadowFilterAttr] :: DropShadow -> !FilterAttributes
[_dropShadowDx] :: DropShadow -> Double
[_dropShadowDy] :: DropShadow -> Double
[_dropShadowStdDeviation] :: DropShadow -> NumberOptionalNumber
dropShadowDrawAttributes :: Lens' DropShadow DrawAttributes
dropShadowFilterAttr :: Lens' DropShadow FilterAttributes
dropShadowDx :: Lens' DropShadow Double
dropShadowDy :: Lens' DropShadow Double
dropShadowStdDeviation :: Lens' DropShadow NumberOptionalNumber
data Flood
Flood :: !DrawAttributes -> !FilterAttributes -> !PixelRGBA8 -> !Maybe Double -> Flood
[_floodDrawAttributes] :: Flood -> !DrawAttributes
[_floodFilterAttr] :: Flood -> !FilterAttributes
[_floodColor] :: Flood -> !PixelRGBA8
[_floodOpacity] :: Flood -> !Maybe Double
floodDrawAttributes :: Lens' Flood DrawAttributes
floodFilterAttr :: Lens' Flood FilterAttributes
floodColor :: Lens' Flood PixelRGBA8
floodOpacity :: Lens' Flood (Maybe Double)
data Tile
Tile :: !DrawAttributes -> !FilterAttributes -> !Maybe FilterSource -> Tile
[_tileDrawAttributes] :: Tile -> !DrawAttributes
[_tileFilterAttr] :: Tile -> !FilterAttributes
[_tileIn] :: Tile -> !Maybe FilterSource
tileDrawAttributes :: Lens' Tile DrawAttributes
tileFilterAttr :: Lens' Tile FilterAttributes
tileIn :: Lens' Tile (Maybe FilterSource)
data Offset
Offset :: !DrawAttributes -> !FilterAttributes -> !Maybe FilterSource -> !Number -> !Number -> Offset
[_offsetDrawAttributes] :: Offset -> !DrawAttributes
[_offsetFilterAttr] :: Offset -> !FilterAttributes
[_offsetIn] :: Offset -> !Maybe FilterSource
[_offsetDX] :: Offset -> !Number
[_offsetDY] :: Offset -> !Number
offsetDrawAttributes :: Lens' Offset DrawAttributes
offsetFilterAttr :: Lens' Offset FilterAttributes
offsetIn :: Lens' Offset (Maybe FilterSource)
offsetDX :: Lens' Offset Number
offsetDY :: Lens' Offset Number
data MergeNode
MergeNode :: !DrawAttributes -> !Maybe FilterSource -> MergeNode
[_mergeNodeDrawAttributes] :: MergeNode -> !DrawAttributes
[_mergeNodeIn] :: MergeNode -> !Maybe FilterSource
mergeNodeDrawAttributes :: Lens' MergeNode DrawAttributes
mergeNodeIn :: Lens' MergeNode (Maybe FilterSource)
data Merge
Merge :: !DrawAttributes -> !FilterAttributes -> ![FilterElement] -> Merge
[_mergeDrawAttributes] :: Merge -> !DrawAttributes
[_mergeFilterAttributes] :: Merge -> !FilterAttributes
[_mergeChildren] :: Merge -> ![FilterElement]
mergeDrawAttributes :: Lens' Merge DrawAttributes
mergeFilterAttributes :: Lens' Merge FilterAttributes
mergeChildren :: Lens' Merge [FilterElement]
data ImageF
ImageF :: DrawAttributes -> !FilterAttributes -> !String -> !PreserveAspectRatio -> ImageF
[_imageFDrawAttributes] :: ImageF -> DrawAttributes
[_imageFFilterAttr] :: ImageF -> !FilterAttributes
[_imageFHref] :: ImageF -> !String
[_imageFAspectRatio] :: ImageF -> !PreserveAspectRatio
imageFDrawAttributes :: Lens' ImageF DrawAttributes
imageFFilterAttr :: Lens' ImageF FilterAttributes
imageFHref :: Lens' ImageF String
imageFAspectRatio :: Lens' ImageF PreserveAspectRatio
data ComponentTransfer
ComponentTransfer :: !DrawAttributes -> !FilterAttributes -> ![FilterElement] -> !Maybe FilterSource -> ComponentTransfer
[_compTransferDrawAttributes] :: ComponentTransfer -> !DrawAttributes
[_compTransferFilterAttr] :: ComponentTransfer -> !FilterAttributes
[_compTransferChildren] :: ComponentTransfer -> ![FilterElement]
[_compTransferIn] :: ComponentTransfer -> !Maybe FilterSource
compTransferDrawAttributes :: Lens' ComponentTransfer DrawAttributes
compTransferFilterAttr :: Lens' ComponentTransfer FilterAttributes
compTransferChildren :: Lens' ComponentTransfer [FilterElement]
compTransferIn :: Lens' ComponentTransfer (Maybe FilterSource)
data FuncA
FuncA :: !DrawAttributes -> !FuncType -> ![Number] -> !Number -> !Number -> !Number -> !Number -> FuncA
[_funcADrawAttributes] :: FuncA -> !DrawAttributes
[_funcAType] :: FuncA -> !FuncType
[_funcATableValues] :: FuncA -> ![Number]
[_funcASlope] :: FuncA -> !Number
[_funcAIntercept] :: FuncA -> !Number
[_funcAAmplitude] :: FuncA -> !Number
[_funcAExponent] :: FuncA -> !Number
data FuncType
FIdentity :: FuncType
FTable :: FuncType
FDiscrete :: FuncType
FLinear :: FuncType
FGamma :: FuncType
funcADrawAttributes :: Lens' FuncA DrawAttributes
funcAType :: Lens' FuncA FuncType
funcATableValues :: Lens' FuncA [Number]
funcASlope :: Lens' FuncA Number
funcAIntercept :: Lens' FuncA Number
funcAAmplitude :: Lens' FuncA Number
funcAExponent :: Lens' FuncA Number
data FuncR
FuncR :: !DrawAttributes -> !FuncType -> ![Number] -> !Number -> !Number -> !Number -> !Number -> FuncR
[_funcRDrawAttributes] :: FuncR -> !DrawAttributes
[_funcRType] :: FuncR -> !FuncType
[_funcRTableValues] :: FuncR -> ![Number]
[_funcRSlope] :: FuncR -> !Number
[_funcRIntercept] :: FuncR -> !Number
[_funcRAmplitude] :: FuncR -> !Number
[_funcRExponent] :: FuncR -> !Number
funcRDrawAttributes :: Lens' FuncR DrawAttributes
funcRType :: Lens' FuncR FuncType
funcRTableValues :: Lens' FuncR [Number]
funcRSlope :: Lens' FuncR Number
funcRIntercept :: Lens' FuncR Number
funcRAmplitude :: Lens' FuncR Number
funcRExponent :: Lens' FuncR Number
data FuncG
FuncG :: !DrawAttributes -> !FuncType -> ![Number] -> !Number -> !Number -> !Number -> !Number -> FuncG
[_funcGDrawAttributes] :: FuncG -> !DrawAttributes
[_funcGType] :: FuncG -> !FuncType
[_funcGTableValues] :: FuncG -> ![Number]
[_funcGSlope] :: FuncG -> !Number
[_funcGIntercept] :: FuncG -> !Number
[_funcGAmplitude] :: FuncG -> !Number
[_funcGExponent] :: FuncG -> !Number
funcGDrawAttributes :: Lens' FuncG DrawAttributes
funcGType :: Lens' FuncG FuncType
funcGTableValues :: Lens' FuncG [Number]
funcGSlope :: Lens' FuncG Number
funcGIntercept :: Lens' FuncG Number
funcGAmplitude :: Lens' FuncG Number
funcGExponent :: Lens' FuncG Number
data FuncB
FuncB :: !DrawAttributes -> !FuncType -> ![Number] -> !Number -> !Number -> !Number -> !Number -> FuncB
[_funcBDrawAttributes] :: FuncB -> !DrawAttributes
[_funcBType] :: FuncB -> !FuncType
[_funcBTableValues] :: FuncB -> ![Number]
[_funcBSlope] :: FuncB -> !Number
[_funcBIntercept] :: FuncB -> !Number
[_funcBAmplitude] :: FuncB -> !Number
[_funcBExponent] :: FuncB -> !Number
funcBDrawAttributes :: Lens' FuncB DrawAttributes
funcBType :: Lens' FuncB FuncType
funcBTableValues :: Lens' FuncB [Number]
funcBSlope :: Lens' FuncB Number
funcBIntercept :: Lens' FuncB Number
funcBAmplitude :: Lens' FuncB Number
funcBExponent :: Lens' FuncB Number
data ColorMatrixType
Matrix :: ColorMatrixType
Saturate :: ColorMatrixType
HueRotate :: ColorMatrixType
LuminanceToAlpha :: ColorMatrixType
colorMatrixDrawAttributes :: Lens' ColorMatrix DrawAttributes
colorMatrixFilterAttr :: Lens' ColorMatrix FilterAttributes
colorMatrixIn :: Lens' ColorMatrix (Maybe FilterSource)
colorMatrixType :: Lens' ColorMatrix ColorMatrixType
colorMatrixValues :: Lens' ColorMatrix String
data ColorMatrix
ColorMatrix :: !DrawAttributes -> !FilterAttributes -> !Maybe FilterSource -> !ColorMatrixType -> !String -> ColorMatrix
[_colorMatrixDrawAttributes] :: ColorMatrix -> !DrawAttributes
[_colorMatrixFilterAttr] :: ColorMatrix -> !FilterAttributes
[_colorMatrixIn] :: ColorMatrix -> !Maybe FilterSource
[_colorMatrixType] :: ColorMatrix -> !ColorMatrixType
[_colorMatrixValues] :: ColorMatrix -> !String
compositeDrawAttributes :: Lens' Composite DrawAttributes
compositeFilterAttr :: Lens' Composite FilterAttributes
compositeIn :: Lens' Composite (Maybe FilterSource)
compositeIn2 :: Lens' Composite (Maybe FilterSource)
compositeOperator :: Lens' Composite CompositeOperator
compositeK1 :: Lens' Composite Number
compositeK2 :: Lens' Composite Number
compositeK3 :: Lens' Composite Number
compositeK4 :: Lens' Composite Number
data Composite
Composite :: DrawAttributes -> !FilterAttributes -> Maybe FilterSource -> Maybe FilterSource -> CompositeOperator -> Number -> Number -> Number -> Number -> Composite
[_compositeDrawAttributes] :: Composite -> DrawAttributes
[_compositeFilterAttr] :: Composite -> !FilterAttributes
[_compositeIn] :: Composite -> Maybe FilterSource
[_compositeIn2] :: Composite -> Maybe FilterSource
[_compositeOperator] :: Composite -> CompositeOperator
[_compositeK1] :: Composite -> Number
[_compositeK2] :: Composite -> Number
[_compositeK3] :: Composite -> Number
[_compositeK4] :: Composite -> Number
data CompositeOperator
CompositeOver :: CompositeOperator
CompositeIn :: CompositeOperator
CompositeOut :: CompositeOperator
CompositeAtop :: CompositeOperator
CompositeXor :: CompositeOperator
CompositeArithmetic :: CompositeOperator
data EdgeMode
EdgeDuplicate :: EdgeMode
EdgeWrap :: EdgeMode
EdgeNone :: EdgeMode
gaussianBlurDrawAttributes :: Lens' GaussianBlur DrawAttributes
gaussianBlurFilterAttr :: Lens' GaussianBlur FilterAttributes
gaussianBlurIn :: Lens' GaussianBlur (Maybe FilterSource)
gaussianBlurStdDeviationX :: Lens' GaussianBlur Number
gaussianBlurStdDeviationY :: Lens' GaussianBlur (Maybe Number)
gaussianBlurEdgeMode :: Lens' GaussianBlur EdgeMode
data GaussianBlur
GaussianBlur :: DrawAttributes -> !FilterAttributes -> Maybe FilterSource -> Number -> Maybe Number -> EdgeMode -> GaussianBlur
[_gaussianBlurDrawAttributes] :: GaussianBlur -> DrawAttributes
[_gaussianBlurFilterAttr] :: GaussianBlur -> !FilterAttributes
[_gaussianBlurIn] :: GaussianBlur -> Maybe FilterSource
[_gaussianBlurStdDeviationX] :: GaussianBlur -> Number
[_gaussianBlurStdDeviationY] :: GaussianBlur -> Maybe Number
[_gaussianBlurEdgeMode] :: GaussianBlur -> EdgeMode
turbulenceDrawAttributes :: Lens' Turbulence DrawAttributes
turbulenceFilterAttr :: Lens' Turbulence FilterAttributes
turbulenceBaseFrequency :: Lens' Turbulence (Double, Maybe Double)
turbulenceNumOctaves :: Lens' Turbulence Int
turbulenceSeed :: Lens' Turbulence Double
turbulenceStitchTiles :: Lens' Turbulence StitchTiles
turbulenceType :: Lens' Turbulence TurbulenceType
data Turbulence
Turbulence :: !DrawAttributes -> !FilterAttributes -> !(Double, Maybe Double) -> Int -> Double -> StitchTiles -> TurbulenceType -> Turbulence
[_turbulenceDrawAttributes] :: Turbulence -> !DrawAttributes
[_turbulenceFilterAttr] :: Turbulence -> !FilterAttributes
[_turbulenceBaseFrequency] :: Turbulence -> !(Double, Maybe Double)
[_turbulenceNumOctaves] :: Turbulence -> Int
[_turbulenceSeed] :: Turbulence -> Double
[_turbulenceStitchTiles] :: Turbulence -> StitchTiles
[_turbulenceType] :: Turbulence -> TurbulenceType
data TurbulenceType
FractalNoiseType :: TurbulenceType
TurbulenceType :: TurbulenceType
data StitchTiles
NoStitch :: StitchTiles
Stitch :: StitchTiles
data DisplacementMap
DisplacementMap :: !DrawAttributes -> !FilterAttributes -> !Maybe FilterSource -> !Maybe FilterSource -> !Maybe Double -> ChannelSelector -> ChannelSelector -> DisplacementMap
[_displacementMapDrawAttributes] :: DisplacementMap -> !DrawAttributes
[_displacementMapFilterAttr] :: DisplacementMap -> !FilterAttributes
[_displacementMapIn] :: DisplacementMap -> !Maybe FilterSource
[_displacementMapIn2] :: DisplacementMap -> !Maybe FilterSource
[_displacementMapScale] :: DisplacementMap -> !Maybe Double
[_displacementMapXChannelSelector] :: DisplacementMap -> ChannelSelector
[_displacementMapYChannelSelector] :: DisplacementMap -> ChannelSelector
displacementMapDrawAttributes :: Lens' DisplacementMap DrawAttributes
displacementMapFilterAttr :: Lens' DisplacementMap FilterAttributes
displacementMapIn :: Lens' DisplacementMap (Maybe FilterSource)
displacementMapIn2 :: Lens' DisplacementMap (Maybe FilterSource)
displacementMapScale :: Lens' DisplacementMap (Maybe Double)
displacementMapXChannelSelector :: Lens' DisplacementMap ChannelSelector
displacementMapYChannelSelector :: Lens' DisplacementMap ChannelSelector
data ChannelSelector
ChannelR :: ChannelSelector
ChannelG :: ChannelSelector
ChannelB :: ChannelSelector
ChannelA :: ChannelSelector

-- | Defines a rectangle. Corresponds to `<a>rectangle</a>` svg tag.
data Rectangle
Rectangle :: DrawAttributes -> !Point -> !Maybe Number -> !Maybe Number -> !(Maybe Number, Maybe Number) -> Rectangle
[_rectangleDrawAttributes] :: Rectangle -> DrawAttributes

-- | Upper left corner of the rectangle, corresponds to the attributes
--   <tt>x</tt> and <tt>y</tt>.
[_rectUpperLeftCorner] :: Rectangle -> !Point

-- | Rectangle width, corresponds to the <tt>width</tt> attribute.
[_rectWidth] :: Rectangle -> !Maybe Number

-- | Rectangle height, corresponds to the <tt>height</tt> attribute.
[_rectHeight] :: Rectangle -> !Maybe Number

-- | Defines the rounded corner radius of the rectangle. Corresponds to the
--   <tt>rx</tt> and <tt>ry</tt> attributes.
[_rectCornerRadius] :: Rectangle -> !(Maybe Number, Maybe Number)
pattern RectangleTree :: Rectangle -> Tree
rectangleTree :: Rectangle -> Tree
rectUpperLeftCorner :: Lens' Rectangle Point
rectWidth :: Lens' Rectangle (Maybe Number)
rectHeight :: Lens' Rectangle (Maybe Number)
rectCornerRadius :: Lens' Rectangle (Maybe Number, Maybe Number)

-- | Defines a simple line. Corresponds to the `<a>line</a>` tag.
data Line
Line :: DrawAttributes -> !Point -> !Point -> Line
[_lineDrawAttributes] :: Line -> DrawAttributes

-- | First point of the line, corresponds to the <tt>x1</tt> and
--   <tt>y1</tt> attributes.
[_linePoint1] :: Line -> !Point

-- | Second point of the line, corresponds to the <tt>x2</tt> and
--   <tt>y2</tt> attributes.
[_linePoint2] :: Line -> !Point
pattern LineTree :: Line -> Tree
lineTree :: Line -> Tree
linePoint1 :: Lens' Line Point
linePoint2 :: Lens' Line Point

-- | Primitive decribing polygon composed of segements. Corresponds to the
--   `<a>polygon</a>` tag
data Polygon
Polygon :: DrawAttributes -> [RPoint] -> Polygon
[_polygonDrawAttributes] :: Polygon -> DrawAttributes

-- | Points of the polygon. Corresponds to the <tt>points</tt> attribute.
[_polygonPoints] :: Polygon -> [RPoint]
pattern PolygonTree :: Polygon -> Tree
polygonTree :: Polygon -> Tree
polygonPoints :: Lens' Polygon [RPoint]

-- | This primitive describes an unclosed suite of segments. Correspond to
--   the `<a>polyline</a>` tag.
data PolyLine
PolyLine :: DrawAttributes -> [RPoint] -> PolyLine
[_polyLineDrawAttributes] :: PolyLine -> DrawAttributes

-- | Geometry definition of the polyline. Corresponds to the
--   <tt>points</tt> attribute
[_polyLinePoints] :: PolyLine -> [RPoint]
pattern PolyLineTree :: PolyLine -> Tree
polyLineTree :: PolyLine -> Tree
polyLinePoints :: Lens' PolyLine [RPoint]

-- | Type mapping the `<a>path</a>` svg tag.
data Path
Path :: DrawAttributes -> [PathCommand] -> Path
[_pathDrawAttributes] :: Path -> DrawAttributes

-- | Definition of the path, corresponds to the <tt>d</tt> attribute.
[_pathDefinition] :: Path -> [PathCommand]
pattern PathTree :: Path -> Tree
pathTree :: Path -> Tree
pathDefinition :: Lens' Path [PathCommand]

-- | Defines a `<a>circle</a>`.
data Circle
Circle :: DrawAttributes -> !Point -> !Number -> Circle
[_circleDrawAttributes] :: Circle -> DrawAttributes

-- | Defines the center of the circle. Corresponds to the <tt>cx</tt> and
--   <tt>cy</tt> attributes.
[_circleCenter] :: Circle -> !Point

-- | Radius of the circle, corresponds to the <tt>r</tt> attribute.
[_circleRadius] :: Circle -> !Number
pattern CircleTree :: Circle -> Tree
circleTree :: Circle -> Tree
circleCenter :: Lens' Circle Point
circleRadius :: Lens' Circle Number

-- | Defines an `<a>ellipse</a>`
data Ellipse
Ellipse :: DrawAttributes -> !Point -> !Number -> !Number -> Ellipse
[_ellipseDrawAttributes] :: Ellipse -> DrawAttributes

-- | Center of the ellipse, corresponds to the <tt>cx</tt> and <tt>cy</tt>
--   attributes.
[_ellipseCenter] :: Ellipse -> !Point

-- | Radius along the X axis, corresponds to the <tt>rx</tt> attribute.
[_ellipseXRadius] :: Ellipse -> !Number

-- | Radius along the Y axis, corresponds to the <tt>ry</tt> attribute.
[_ellipseYRadius] :: Ellipse -> !Number
pattern EllipseTree :: Ellipse -> Tree
ellipseTree :: Ellipse -> Tree
ellipseCenter :: Lens' Ellipse Point
ellipseXRadius :: Lens' Ellipse Number
ellipseYRadius :: Lens' Ellipse Number

-- | Description of path used in meshgradient tag
data GradientPathCommand

-- | Line to, <tt>L</tt> or <tt>l</tt> Svg path command.
GLine :: !Origin -> !Maybe RPoint -> GradientPathCommand

-- | Cubic bezier, <tt>C</tt> or <tt>c</tt> command
GCurve :: !Origin -> !RPoint -> !RPoint -> !Maybe RPoint -> GradientPathCommand

-- | <tt>Z</tt> command
GClose :: GradientPathCommand
data MeshGradientType
GradientBilinear :: MeshGradientType
GradientBicubic :: MeshGradientType

-- | Defines a `<a>meshgradient</a>` tag.
data MeshGradient
MeshGradient :: DrawAttributes -> !Number -> !Number -> !MeshGradientType -> !CoordinateUnits -> ![Transformation] -> ![MeshGradientRow] -> MeshGradient
[_meshGradientDrawAttributes] :: MeshGradient -> DrawAttributes

-- | Original x coordinate of the mesh gradient
[_meshGradientX] :: MeshGradient -> !Number

-- | Original y coordinate of the mesh gradient
[_meshGradientY] :: MeshGradient -> !Number

-- | Type of color interpolation to use
[_meshGradientType] :: MeshGradient -> !MeshGradientType

-- | Coordiante system to use
[_meshGradientUnits] :: MeshGradient -> !CoordinateUnits

-- | Optional transform
[_meshGradientTransform] :: MeshGradient -> ![Transformation]

-- | List of patch rows in the mesh.
[_meshGradientRows] :: MeshGradient -> ![MeshGradientRow]
pattern MeshGradientTree :: MeshGradient -> Tree
meshGradientTree :: MeshGradient -> Tree
meshGradientX :: Lens' MeshGradient Number
meshGradientY :: Lens' MeshGradient Number
meshGradientType :: Lens' MeshGradient MeshGradientType
meshGradientUnits :: Lens' MeshGradient CoordinateUnits
meshGradientTransform :: Lens' MeshGradient [Transformation]
meshGradientRows :: Lens' MeshGradient [MeshGradientRow]

-- | Define a `<a>meshrow</a>` tag.
newtype MeshGradientRow
MeshGradientRow :: [MeshGradientPatch] -> MeshGradientRow

-- | List of patch in a row
[_meshGradientRowPatches] :: MeshGradientRow -> [MeshGradientPatch]
meshGradientRowPatches :: Iso' MeshGradientRow [MeshGradientPatch]

-- | Defines `<a>meshpatch</a>` SVG tag
newtype MeshGradientPatch
MeshGradientPatch :: [GradientStop] -> MeshGradientPatch

-- | List of stop, from 2 to 4 in a patch
[_meshGradientPatchStops] :: MeshGradientPatch -> [GradientStop]
meshGradientPatchStops :: Iso' MeshGradientPatch [GradientStop]

-- | Defines an `<a>image</a>` tag.
data Image
Image :: DrawAttributes -> !Point -> !Number -> !Number -> !String -> !PreserveAspectRatio -> Image
[_imageDrawAttributes] :: Image -> DrawAttributes

-- | Position of the image referenced by its upper left corner.
[_imageCornerUpperLeft] :: Image -> !Point

-- | Image width
[_imageWidth] :: Image -> !Number

-- | Image Height
[_imageHeight] :: Image -> !Number

-- | Image href, pointing to the real image.
[_imageHref] :: Image -> !String

-- | preserveAspectRatio attribute
[_imageAspectRatio] :: Image -> !PreserveAspectRatio
pattern ImageTree :: Image -> Tree
imageTree :: Image -> Tree
imageCornerUpperLeft :: Lens' Image Point
imageWidth :: Lens' Image Number
imageHeight :: Lens' Image Number
imageHref :: Lens' Image String
imageAspectRatio :: Lens' Image PreserveAspectRatio

-- | Defines an `<a>use</a>` for a named content. Every named content can
--   be reused in the document using this element.
data Use
Use :: DrawAttributes -> Point -> String -> Maybe Number -> Maybe Number -> Use
[_useDrawAttributes] :: Use -> DrawAttributes

-- | Position where to draw the "used" element. Corresponds to the
--   <tt>x</tt> and <tt>y</tt> attributes.
[_useBase] :: Use -> Point

-- | Referenced name, corresponds to `xlink:href` attribute.
[_useName] :: Use -> String

-- | Defines the width of the region where to place the element.
--   Corresponds to the <tt>width</tt> attribute.
[_useWidth] :: Use -> Maybe Number

-- | Defines the height of the region where to place the element.
--   Corresponds to the <tt>height</tt> attribute.
[_useHeight] :: Use -> Maybe Number
pattern UseTree :: Use -> Maybe Tree -> Tree
useTree :: Use -> Tree
useBase :: Lens' Use Point
useName :: Lens' Use String
useWidth :: Lens' Use (Maybe Number)
useHeight :: Lens' Use (Maybe Number)

-- | Defines a SVG group, corresponds to `<a>g</a>` tag.
data Group
Group :: DrawAttributes -> ![Tree] -> !Maybe (Double, Double, Double, Double) -> !PreserveAspectRatio -> Group
[_groupDrawAttributes] :: Group -> DrawAttributes

-- | Content of the group, corresponding to all the tags inside the
--   `<a>g</a>` tag.
[_groupChildren] :: Group -> ![Tree]

-- | Mapped to the attribute <tt>viewBox</tt>
[_groupViewBox] :: Group -> !Maybe (Double, Double, Double, Double)

-- | used for symbols only
[_groupAspectRatio] :: Group -> !PreserveAspectRatio
pattern GroupTree :: Group -> Tree
groupTree :: Group -> Tree
groupDrawAttributes :: Lens' Group DrawAttributes
groupChildren :: Lens' Group [Tree]
groupViewBox :: Lens' Group (Maybe (Double, Double, Double, Double))
groupAspectRatio :: Lens' Group PreserveAspectRatio
pattern SymbolTree :: Group -> Tree
symbolTree :: Group -> Tree
pattern DefinitionTree :: Group -> Tree
definitionTree :: Group -> Tree

-- | Defines the `<a>filter</a>` tag.
data Filter
Filter :: DrawAttributes -> !FilterAttributes -> ![FilterElement] -> Filter
[_filterDrawAttributes] :: Filter -> DrawAttributes
[_filterSelfAttributes] :: Filter -> !FilterAttributes
[_filterChildren] :: Filter -> ![FilterElement]
pattern FilterTree :: Filter -> Tree
filterTree :: Filter -> Tree
filterChildren :: Lens' Filter [FilterElement]

-- | Defines the global `<a>text</a>` SVG tag.
data Text
Text :: !TextAdjust -> !TextSpan -> Text

-- | Defines the <tt>lengthAdjust</tt> attribute.
[_textAdjust] :: Text -> !TextAdjust

-- | Root of the text content.
[_textRoot] :: Text -> !TextSpan
pattern TextTree :: Maybe TextPath -> Text -> Tree
textTree :: Maybe TextPath -> Text -> Tree
textAdjust :: Lens' Text TextAdjust
textRoot :: Lens' Text TextSpan

-- | Tell where to anchor the text, where the position given is realative
--   to the text.
data TextAnchor

-- | The text with left aligned, or start at the postion If the point is
--   the <a>*</a> then the text will be printed this way:
--   
--   <pre>
--   *THE_TEXT_TO_PRINT
--   </pre>
--   
--   Equivalent to the <tt>start</tt> value.
TextAnchorStart :: TextAnchor

-- | The text is middle aligned, so the text will be at the left and right
--   of the position:
--   
--   <pre>
--   THE_TEXT*TO_PRINT
--   </pre>
--   
--   Equivalent to the <tt>middle</tt> value.
TextAnchorMiddle :: TextAnchor

-- | The text is right aligned.
--   
--   <pre>
--   THE_TEXT_TO_PRINT*
--   </pre>
--   
--   Equivalent to the <tt>end</tt> value.
TextAnchorEnd :: TextAnchor

-- | Little helper to create a SVG text at a given baseline position.
textAt :: Point -> Text -> Text

-- | Describes the `<a>textpath</a>` SVG tag.
data TextPath
TextPath :: !Number -> !String -> !TextPathMethod -> !TextPathSpacing -> TextPath

-- | Defines the beginning offset on the path, the <tt>startOffset</tt>
--   attribute.
[_textPathStartOffset] :: TextPath -> !Number

-- | Defines the `xlink:href` attribute.
[_textPathName] :: TextPath -> !String

-- | Corresponds to the <tt>method</tt> attribute.
[_textPathMethod] :: TextPath -> !TextPathMethod

-- | Corresponds to the <tt>spacing</tt> attribute.
[_textPathSpacing] :: TextPath -> !TextPathSpacing
textPathStartOffset :: Lens' TextPath Number
textPathName :: Lens' TextPath String
textPathMethod :: Lens' TextPath TextPathMethod
textPathSpacing :: Lens' TextPath TextPathSpacing

-- | Describes the content of the <tt>spacing</tt> text path attribute.
data TextPathSpacing

-- | Corresponds to the <tt>exact</tt> value.
TextPathSpacingExact :: TextPathSpacing

-- | Corresponds to the <tt>auto</tt> value.
TextPathSpacingAuto :: TextPathSpacing

-- | Describe the content of the <tt>method</tt> attribute on text path.
data TextPathMethod

-- | Corresponds to the <tt>align</tt> value.
TextPathAlign :: TextPathMethod

-- | Corresponds to the <tt>stretch</tt> value.
TextPathStretch :: TextPathMethod

-- | Defines the content of a `<a>tspan</a>` tag.
data TextSpanContent

-- | Raw text
SpanText :: !Text -> TextSpanContent

-- | Equivalent to a `<a>tref</a>`
SpanTextRef :: !String -> TextSpanContent

-- | Defines a `<a>tspan</a>`
SpanSub :: !TextSpan -> TextSpanContent

-- | Defines a `<a>tspan</a>` tag.
data TextSpan
TextSpan :: !TextInfo -> !DrawAttributes -> ![TextSpanContent] -> TextSpan

-- | Placement information for the text.
[_spanInfo] :: TextSpan -> !TextInfo

-- | Drawing attributes for the text span.
[_spanDrawAttributes] :: TextSpan -> !DrawAttributes

-- | Content of the span.
[_spanContent] :: TextSpan -> ![TextSpanContent]
spanInfo :: Lens' TextSpan TextInfo
spanDrawAttributes :: Lens' TextSpan DrawAttributes
spanContent :: Lens' TextSpan [TextSpanContent]

-- | Defines position information associated to `<a>text</a>` or
--   `<a>tspan</a>` svg tag.
data TextInfo
TextInfo :: ![Number] -> ![Number] -> ![Number] -> ![Number] -> ![Double] -> !Maybe Number -> TextInfo

-- | <tt>x</tt> attribute.
[_textInfoX] :: TextInfo -> ![Number]

-- | <tt>y</tt> attribute.
[_textInfoY] :: TextInfo -> ![Number]

-- | <tt>dx</tt> attribute.
[_textInfoDX] :: TextInfo -> ![Number]

-- | <tt>dy</tt> attribute.
[_textInfoDY] :: TextInfo -> ![Number]

-- | <tt>rotate</tt> attribute.
[_textInfoRotate] :: TextInfo -> ![Double]

-- | <tt>textLength</tt> attribute.
[_textInfoLength] :: TextInfo -> !Maybe Number
textInfoX :: Lens' TextInfo [Number]
textInfoY :: Lens' TextInfo [Number]
textInfoDX :: Lens' TextInfo [Number]
textInfoDY :: Lens' TextInfo [Number]
textInfoRotate :: Lens' TextInfo [Double]
textInfoLength :: Lens' TextInfo (Maybe Number)

-- | Defines the possible values of the <tt>lengthAdjust</tt> attribute.
data TextAdjust

-- | Value <tt>spacing</tt>
TextAdjustSpacing :: TextAdjust

-- | Value <tt>spacingAndGlyphs</tt>
TextAdjustSpacingAndGlyphs :: TextAdjust

-- | Defines the `<a>marker</a>` tag.
data Marker
Marker :: DrawAttributes -> !(Number, Number) -> !Maybe Number -> !Maybe Number -> !Maybe MarkerOrientation -> !Maybe MarkerUnit -> !Maybe (Double, Double, Double, Double) -> !Maybe Overflow -> !PreserveAspectRatio -> [Tree] -> Marker
[_markerDrawAttributes] :: Marker -> DrawAttributes

-- | Defines the reference point of the marker. corresponds to the
--   <tt>refX</tt> and <tt>refY</tt> attributes.
[_markerRefPoint] :: Marker -> !(Number, Number)

-- | Defines the width of the marker. Corresponds to the <a>markerWidth</a>
--   attribute.
[_markerWidth] :: Marker -> !Maybe Number

-- | Defines the height of the marker. Corresponds to the
--   <a>markerHeight</a> attribute.
[_markerHeight] :: Marker -> !Maybe Number

-- | Corresponds to the <tt>orient</tt> attribute.
[_markerOrient] :: Marker -> !Maybe MarkerOrientation

-- | Corresponds to the <a>markerUnits</a> attribute.
[_markerUnits] :: Marker -> !Maybe MarkerUnit

-- | Optional viewbox
[_markerViewBox] :: Marker -> !Maybe (Double, Double, Double, Double)

-- | Elements defining the marker.
[_markerOverflow] :: Marker -> !Maybe Overflow

-- | preserveAspectRatio attribute
[_markerAspectRatio] :: Marker -> !PreserveAspectRatio

-- | Elements defining the marker.
[_markerElements] :: Marker -> [Tree]
pattern MarkerTree :: Marker -> Tree
markerTree :: Marker -> Tree

-- | Defines the content of the <a>markerUnits</a> attribute on the Marker.
data Overflow

-- | Value <tt>visible</tt>
OverflowVisible :: Overflow

-- | Value <tt>hidden</tt>
OverflowHidden :: Overflow

-- | Defines the orientation, associated to the <tt>orient</tt> attribute
--   on the Marker
data MarkerOrientation

-- | Auto value
OrientationAuto :: MarkerOrientation

-- | Specific angle.
OrientationAngle :: Coord -> MarkerOrientation

-- | Define the content of the <a>markerUnits</a> attribute on the Marker.
data MarkerUnit

-- | Value <a>strokeWidth</a>
MarkerUnitStrokeWidth :: MarkerUnit

-- | Value <tt>userSpaceOnUse</tt>
MarkerUnitUserSpaceOnUse :: MarkerUnit
markerRefPoint :: Lens' Marker (Number, Number)
markerWidth :: Lens' Marker (Maybe Number)
markerHeight :: Lens' Marker (Maybe Number)
markerOrient :: Lens' Marker (Maybe MarkerOrientation)
markerUnits :: Lens' Marker (Maybe MarkerUnit)
markerViewBox :: Lens' Marker (Maybe (Double, Double, Double, Double))
markerOverflow :: Lens' Marker (Maybe Overflow)
markerAspectRatio :: Lens' Marker PreserveAspectRatio
markerElements :: Lens' Marker [Tree]

-- | Defines a color stop for the gradients. Represents the `<a>stop</a>`
--   SVG tag.
data GradientStop
GradientStop :: !Float -> !PixelRGBA8 -> !Maybe GradientPathCommand -> !Maybe Float -> GradientStop

-- | Gradient offset between 0 and 1, corresponds to the <tt>offset</tt>
--   attribute.
[_gradientOffset] :: GradientStop -> !Float

-- | Color of the gradient stop. Corresponds to the `stop-color` attribute.
[_gradientColor] :: GradientStop -> !PixelRGBA8

-- | Path command used in mesh patch
[_gradientPath] :: GradientStop -> !Maybe GradientPathCommand

-- | Stop color opacity
[_gradientOpacity] :: GradientStop -> !Maybe Float
gradientOffset :: Lens' GradientStop Float
gradientColor :: Lens' GradientStop PixelRGBA8
gradientPath :: Lens' GradientStop (Maybe GradientPathCommand)
gradientOpacity :: Lens' GradientStop (Maybe Float)

-- | Defines a `<a>linearGradient</a>` tag.
data LinearGradient
LinearGradient :: DrawAttributes -> CoordinateUnits -> Point -> Point -> Spread -> [Transformation] -> [GradientStop] -> LinearGradient
[_linearGradientDrawAttributes] :: LinearGradient -> DrawAttributes

-- | Defines coordinate system of the gradient, associated to the
--   <tt>gradientUnits</tt> attribute.
[_linearGradientUnits] :: LinearGradient -> CoordinateUnits

-- | Point defining the beginning of the line gradient. Associated to the
--   <tt>x1</tt> and <tt>y1</tt> attribute.
[_linearGradientStart] :: LinearGradient -> Point

-- | Point defining the end of the line gradient. Associated to the
--   <tt>x2</tt> and <tt>y2</tt> attribute.
[_linearGradientStop] :: LinearGradient -> Point

-- | Define how to handle the values outside the gradient start and stop.
--   Associated to the <tt>spreadMethod</tt> attribute.
[_linearGradientSpread] :: LinearGradient -> Spread

-- | Define the transformation to apply to the gradient points. Associated
--   to the <tt>gradientTransform</tt> attribute.
[_linearGradientTransform] :: LinearGradient -> [Transformation]

-- | List of color stops of the linear gradient.
[_linearGradientStops] :: LinearGradient -> [GradientStop]
pattern LinearGradientTree :: LinearGradient -> Tree
linearGradientTree :: LinearGradient -> Tree
linearGradientUnits :: Lens' LinearGradient CoordinateUnits
linearGradientStart :: Lens' LinearGradient Point
linearGradientStop :: Lens' LinearGradient Point
linearGradientSpread :: Lens' LinearGradient Spread
linearGradientTransform :: Lens' LinearGradient [Transformation]
linearGradientStops :: Lens' LinearGradient [GradientStop]

-- | Defines a `<a>radialGradient</a>` tag.
data RadialGradient
RadialGradient :: DrawAttributes -> CoordinateUnits -> Point -> Number -> Maybe Number -> Maybe Number -> Spread -> [Transformation] -> [GradientStop] -> RadialGradient
[_radialGradientDrawAttributes] :: RadialGradient -> DrawAttributes

-- | Defines coordinate system of the gradient, associated to the
--   <tt>gradientUnits</tt> attribute.
[_radialGradientUnits] :: RadialGradient -> CoordinateUnits

-- | Center of the radial gradient. Associated to the <tt>cx</tt> and
--   <tt>cy</tt> attributes.
[_radialGradientCenter] :: RadialGradient -> Point

-- | Radius of the radial gradient. Associated to the <tt>r</tt> attribute.
[_radialGradientRadius] :: RadialGradient -> Number

-- | X coordinate of the focus point of the radial gradient. Associated to
--   the <tt>fx</tt> attribute.
[_radialGradientFocusX] :: RadialGradient -> Maybe Number

-- | Y coordinate of the focus point of the radial gradient. Associated to
--   the <tt>fy</tt> attribute.
[_radialGradientFocusY] :: RadialGradient -> Maybe Number

-- | Defines how to handle the values outside the gradient start and stop.
--   Associated to the <tt>spreadMethod</tt> attribute.
[_radialGradientSpread] :: RadialGradient -> Spread

-- | Define the transformation to apply to the gradient points. Associated
--   to the <tt>gradientTransform</tt> attribute.
[_radialGradientTransform] :: RadialGradient -> [Transformation]

-- | List of color stops of the radial gradient.
[_radialGradientStops] :: RadialGradient -> [GradientStop]
pattern RadialGradientTree :: RadialGradient -> Tree
radialGradientTree :: RadialGradient -> Tree
radialGradientUnits :: Lens' RadialGradient CoordinateUnits
radialGradientCenter :: Lens' RadialGradient Point
radialGradientRadius :: Lens' RadialGradient Number
radialGradientFocusX :: Lens' RadialGradient (Maybe Number)
radialGradientFocusY :: Lens' RadialGradient (Maybe Number)
radialGradientSpread :: Lens' RadialGradient Spread
radialGradientTransform :: Lens' RadialGradient [Transformation]
radialGradientStops :: Lens' RadialGradient [GradientStop]

-- | Defines a `<a>pattern</a>` tag.
data Pattern
Pattern :: DrawAttributes -> !Maybe (Double, Double, Double, Double) -> !Number -> !Number -> !Point -> !String -> ![Tree] -> !CoordinateUnits -> !PreserveAspectRatio -> !Maybe [Transformation] -> Pattern
[_patternDrawAttributes] :: Pattern -> DrawAttributes

-- | Possible <tt>viewBox</tt>.
[_patternViewBox] :: Pattern -> !Maybe (Double, Double, Double, Double)

-- | Width of the pattern tile, mapped to the <tt>width</tt> attribute
[_patternWidth] :: Pattern -> !Number

-- | Height of the pattern tile, mapped to the <tt>height</tt> attribute
[_patternHeight] :: Pattern -> !Number

-- | Pattern tile base, mapped to the <tt>x</tt> and <tt>y</tt> attributes.
[_patternPos] :: Pattern -> !Point

-- | Patterns can be chained, so this is a potential reference to another
--   pattern
[_patternHref] :: Pattern -> !String

-- | Elements used in the pattern.
[_patternElements] :: Pattern -> ![Tree]

-- | Defines the cordinate system to use for the pattern. Corresponds to
--   the <tt>patternUnits</tt> attribute.
[_patternUnit] :: Pattern -> !CoordinateUnits

-- | Value of the <tt>preserveAspectRatio</tt> attribute
[_patternAspectRatio] :: Pattern -> !PreserveAspectRatio

-- | Value of <a>patternTransform</a> attribute
[_patternTransform] :: Pattern -> !Maybe [Transformation]
pattern PatternTree :: Pattern -> Tree
patternTree :: Pattern -> Tree
patternViewBox :: Lens' Pattern (Maybe (Double, Double, Double, Double))
patternWidth :: Lens' Pattern Number
patternHeight :: Lens' Pattern Number
patternPos :: Lens' Pattern Point
patternHref :: Lens' Pattern String
patternElements :: Lens' Pattern [Tree]
patternUnit :: Lens' Pattern CoordinateUnits
patternAspectRatio :: Lens' Pattern PreserveAspectRatio
patternTransform :: Lens' Pattern (Maybe [Transformation])

-- | Defines a SVG `<a>mask</a>` tag.
data Mask
Mask :: DrawAttributes -> CoordinateUnits -> CoordinateUnits -> Point -> Number -> Number -> [Tree] -> Mask
[_maskDrawAttributes] :: Mask -> DrawAttributes

-- | Corresponds to the <a>maskContentUnits</a> attributes.
[_maskContentUnits] :: Mask -> CoordinateUnits

-- | Corresponds to the <a>maskUnits</a> attribute.
[_maskUnits] :: Mask -> CoordinateUnits

-- | Corresponds to the <tt>x</tt> and <tt>y</tt> attributes.
[_maskPosition] :: Mask -> Point

-- | Corresponds to the <tt>width</tt> attribute
[_maskWidth] :: Mask -> Number

-- | Corresponds to the <tt>height</tt> attribute.
[_maskHeight] :: Mask -> Number

-- | Children of the `<a>mask</a>` tag.
[_maskContent] :: Mask -> [Tree]
pattern MaskTree :: Mask -> Tree
maskTree :: Mask -> Tree
maskContentUnits :: Lens' Mask CoordinateUnits
maskUnits :: Lens' Mask CoordinateUnits
maskPosition :: Lens' Mask Point
maskWidth :: Lens' Mask Number
maskHeight :: Lens' Mask Number
maskContent :: Lens' Mask [Tree]

-- | Defines a `<a>clipPath</a>` tag.
data ClipPath
ClipPath :: DrawAttributes -> CoordinateUnits -> [Tree] -> ClipPath
[_clipPathDrawAttributes] :: ClipPath -> DrawAttributes

-- | Corresponds to the <a>clipPathUnits</a> attribute
[_clipPathUnits] :: ClipPath -> CoordinateUnits

-- | Corresponds to the content of the tree
[_clipPathContent] :: ClipPath -> [Tree]
pattern ClipPathTree :: ClipPath -> Tree
clipPathTree :: ClipPath -> Tree
clipPathUnits :: Lens' ClipPath CoordinateUnits
clipPathContent :: Lens' ClipPath [Tree]

-- | Describe the content of the preserveAspectRatio attribute.
data PreserveAspectRatio
PreserveAspectRatio :: !Bool -> !Alignment -> !Maybe MeetSlice -> PreserveAspectRatio
[_aspectRatioDefer] :: PreserveAspectRatio -> !Bool
[_aspectRatioAlign] :: PreserveAspectRatio -> !Alignment
[_aspectRatioMeetSlice] :: PreserveAspectRatio -> !Maybe MeetSlice

-- | This type represents the align information of the
--   <tt>preserveAspectRatio</tt> SVGattribute
data Alignment

-- | <tt>none</tt> value
AlignNone :: Alignment

-- | <tt>xMinYMin</tt> value
AlignxMinYMin :: Alignment

-- | <tt>xMidYMin</tt> value
AlignxMidYMin :: Alignment

-- | <tt>xMaxYMin</tt> value
AlignxMaxYMin :: Alignment

-- | <tt>xMinYMid</tt> value
AlignxMinYMid :: Alignment

-- | <tt>xMidYMid</tt> value
AlignxMidYMid :: Alignment

-- | <tt>xMaxYMid</tt> value
AlignxMaxYMid :: Alignment

-- | <tt>xMinYMax</tt> value
AlignxMinYMax :: Alignment

-- | <tt>xMidYMax</tt> value
AlignxMidYMax :: Alignment

-- | <tt>xMaxYMax</tt> value
AlignxMaxYMax :: Alignment

-- | This type represents the "meet or slice" information of the
--   <tt>preserveAspectRatio</tt> SVG attribute
data MeetSlice
Meet :: MeetSlice
Slice :: MeetSlice
aspectRatioDefer :: Lens' PreserveAspectRatio Bool
aspectRatioAlign :: Lens' PreserveAspectRatio Alignment
aspectRatioMeetSlice :: Lens' PreserveAspectRatio (Maybe MeetSlice)

-- | Map a tree while propagating context information. The function passed
--   in parameter receives a list representing the path used to go arrive
--   to the current node.
zipTree :: ([[Tree]] -> Tree) -> Tree -> Tree

-- | Fold all nodes of a SVG tree.
foldTree :: (a -> Tree -> a) -> a -> Tree -> a

-- | Helper function mapping every tree element.
mapTree :: (Tree -> Tree) -> Tree -> Tree
mapBranch :: (TreeBranch -> TreeBranch) -> Tree -> Tree

-- | For every element of a svg tree, associate it's SVG tag name.
nameOfTree :: Tree -> Text

-- | This function replaces all device dependant units with user units
--   given its DPI configuration. Preserves percentage and "em" notation.
toUserUnit :: Dpi -> Number -> Number

-- | Helper function to modify inner value of a number
mapNumber :: (Double -> Double) -> Number -> Number

module Graphics.SvgTree.PathParser
transformParser :: Parser Transformation
command :: Parser PathCommand
pathParser :: Parser [PathCommand]
viewBoxParser :: Parser (Double, Double, Double, Double)
pointData :: Parser [RPoint]
gradientCommand :: Parser GradientPathCommand
serializePoints :: [RPoint] -> ShowS
serializeCommand :: PathCommand -> ShowS
serializeGradientCommand :: GradientPathCommand -> ShowS
serializeCommands :: [PathCommand] -> ShowS
serializeViewBox :: (Double, Double, Double, Double) -> String

module Graphics.SvgTree.Memo
memo :: (Typeable a, Show a) => (a -> Tree) -> a -> Tree

module Graphics.SvgTree.Printer
ppTree :: Tree -> String
ppDocument :: Document -> String


-- | Module providing basic input/output for the SVG document, for document
--   building, please refer to Graphics.Svg.Types.
module Graphics.SvgTree

-- | Try to load an svg file on disc and parse it as a SVG Document.
loadSvgFile :: FilePath -> IO (Maybe Document)

-- | Parse an in-memory SVG file
parseSvgFile :: FilePath -> Text -> Maybe Document
parseSvg :: Text -> Tree
unparse :: Element -> Tree

-- | Transform a SVG document to a XML node.
xmlOfDocument :: Document -> Element
xmlOfTree :: Tree -> Maybe Element

-- | Save a svg Document to a file on disk.
saveXmlFile :: FilePath -> Document -> IO ()

-- | Rewrite a SVG Tree using some CSS rules.
--   
--   This action will propagate the definition of the css directly in each
--   matched element.
cssApply :: [CssRule] -> Tree -> Tree

-- | Parse CSS text into rules.
cssRulesOfText :: Text -> [CssRule]
